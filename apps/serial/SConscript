Import('env', 'libs', 'incs')

import os

env = env.Clone()
libnames = ['arduino', 'cutest']
env.Append(LIBS=libnames)

def get_lib_path(libname):
    node = libs[libname]
    fpath = env.GetBuildPath(node)
    try:
        return os.path.split(fpath)[0]
    except Exception:
        import pdb; pdb.set_trace()

libpaths = map(get_lib_path, libnames)
libpaths = list(set(libpaths))
env.Append(LIBPATH=libpaths)

incpaths = [incs[n] for n in libnames]
incpaths = list(set(incpaths))
env.Append(CPPPATH=incpaths)

obj = env.StaticObject(target='serial.o', source=['serial.c'])
elf = env.Program(target='serial.elf', source=[obj])
objcopy_cmd = "avr-objcopy -O ihex -R .eeprom $SOURCE $TARGET"
hex_ = env.Command('serial.hex', elf, objcopy_cmd)

Return('hex_')
